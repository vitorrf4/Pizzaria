{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { enviroment } from 'src/enviroments/enviroments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ClienteService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = enviroment.apiUrl;\n  }\n  listar() {\n    return this.http.get(`${this.apiUrl}/Cliente/listar`);\n  }\n  listarCpf(cpf) {\n    return this.http.get(`${this.apiUrl}/Cliente/listar/` + cpf);\n  }\n  cadastrar(cliente) {\n    return this.http.post(`${this.apiUrl}/Cliente/cadastrar/`, cliente);\n  }\n  alterar(cliente) {\n    return this.http.put(`${this.apiUrl}/Cliente/alterar/`, cliente);\n  }\n  static #_ = this.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","enviroment","httpOptions","headers","ClienteService","constructor","http","apiUrl","listar","get","listarCpf","cpf","cadastrar","cliente","post","alterar","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Vitor\\Downloads\\pizzaria\\frontend\\src\\app\\services\\cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Observable } from 'rxjs';\r\nimport { Cliente } from 'src/models/Cliente';\r\nimport { enviroment } from 'src/enviroments/enviroments';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type' : 'application/json'\r\n  })\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClienteService {\r\n\r\n  apiUrl = enviroment.apiUrl\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  listar(): Observable<Cliente[]> {\r\n    return this.http.get<Cliente[]>(`${this.apiUrl}/Cliente/listar`);\r\n  }\r\n\r\n  listarCpf(cpf: string): Observable<Cliente[]> {\r\n    return this.http.get<Cliente[]>(`${this.apiUrl}/Cliente/listar/` + cpf);\r\n  }\r\n\r\n  cadastrar(cliente: Cliente): Observable<Cliente[]> {\r\n    return this.http.post<Cliente[]>(`${this.apiUrl}/Cliente/cadastrar/`, cliente);\r\n  }\r\n\r\n  alterar(cliente: Cliente): Observable<Cliente[]> {\r\n    return this.http.put<Cliente[]>(`${this.apiUrl}/Cliente/alterar/`, cliente);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,UAAU,QAAQ,6BAA6B;;;AAExD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAG;GAClB;CACF;AAKD,OAAM,MAAOI,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAGN,UAAU,CAACM,MAAM;EAEc;EAExCC,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,iBAAiB,CAAC;EAClE;EAEAG,SAASA,CAACC,GAAW;IACnB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,kBAAkB,GAAGI,GAAG,CAAC;EACzE;EAEAC,SAASA,CAACC,OAAgB;IACxB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAY,GAAG,IAAI,CAACP,MAAM,qBAAqB,EAAEM,OAAO,CAAC;EAChF;EAEAE,OAAOA,CAACF,OAAgB;IACtB,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAY,GAAG,IAAI,CAACT,MAAM,mBAAmB,EAAEM,OAAO,CAAC;EAC7E;EAAC,QAAAI,CAAA,G;qBApBUb,cAAc,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdlB,cAAc;IAAAmB,OAAA,EAAdnB,cAAc,CAAAoB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}