// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pizzaria;

#nullable disable

namespace API_Estacionamento.Migrations
{
    [DbContext(typeof(PizzariaDBContext))]
    partial class PizzariaDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("AcompanhamentoPedidoPedidoFinal", b =>
                {
                    b.Property<int>("AcompanhamentosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PedidosFinaisId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AcompanhamentosId", "PedidosFinaisId");

                    b.HasIndex("PedidosFinaisId");

                    b.ToTable("AcompanhamentoPedidoPedidoFinal");
                });

            modelBuilder.Entity("PedidoFinalPizzaPedido", b =>
                {
                    b.Property<int>("PedidosFinaisId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PizzasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidosFinaisId", "PizzasId");

                    b.HasIndex("PizzasId");

                    b.ToTable("PedidoFinalPizzaPedido");
                });

            modelBuilder.Entity("PizzaPedidoSabor", b =>
                {
                    b.Property<int>("PedidosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SaboresId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PedidosId", "SaboresId");

                    b.HasIndex("SaboresId");

                    b.ToTable("PizzaPedidoSabor");
                });

            modelBuilder.Entity("pizzaria.Acompanhamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Acompanhamento");
                });

            modelBuilder.Entity("pizzaria.AcompanhamentoPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AcompanhamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PrecoTotal")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AcompanhamentoId");

                    b.ToTable("AcompanhamentoPedido");
                });

            modelBuilder.Entity("pizzaria.Cliente", b =>
                {
                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Cpf");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("pizzaria.PedidoFinal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClienteCpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraPedido")
                        .HasColumnType("TEXT");

                    b.Property<double>("PrecoTotal")
                        .HasColumnType("REAL");

                    b.Property<int>("RegiaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteCpf");

                    b.HasIndex("RegiaoId");

                    b.ToTable("PedidoFinal");
                });

            modelBuilder.Entity("pizzaria.PizzaPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<string>("TamanhoNome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TamanhoNome");

                    b.ToTable("PizzaPedido");
                });

            modelBuilder.Entity("pizzaria.Regiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Regiao");
                });

            modelBuilder.Entity("pizzaria.Sabor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Sabor");
                });

            modelBuilder.Entity("pizzaria.Tamanho", b =>
                {
                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<double>("MultiplicadorPreco")
                        .HasColumnType("REAL");

                    b.Property<int>("QntdFatias")
                        .HasColumnType("INTEGER");

                    b.HasKey("Nome");

                    b.ToTable("Tamanho");
                });

            modelBuilder.Entity("AcompanhamentoPedidoPedidoFinal", b =>
                {
                    b.HasOne("pizzaria.AcompanhamentoPedido", null)
                        .WithMany()
                        .HasForeignKey("AcompanhamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pizzaria.PedidoFinal", null)
                        .WithMany()
                        .HasForeignKey("PedidosFinaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PedidoFinalPizzaPedido", b =>
                {
                    b.HasOne("pizzaria.PedidoFinal", null)
                        .WithMany()
                        .HasForeignKey("PedidosFinaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pizzaria.PizzaPedido", null)
                        .WithMany()
                        .HasForeignKey("PizzasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PizzaPedidoSabor", b =>
                {
                    b.HasOne("pizzaria.PizzaPedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pizzaria.Sabor", null)
                        .WithMany()
                        .HasForeignKey("SaboresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pizzaria.AcompanhamentoPedido", b =>
                {
                    b.HasOne("pizzaria.Acompanhamento", "Acompanhamento")
                        .WithMany()
                        .HasForeignKey("AcompanhamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acompanhamento");
                });

            modelBuilder.Entity("pizzaria.PedidoFinal", b =>
                {
                    b.HasOne("pizzaria.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteCpf");

                    b.HasOne("pizzaria.Regiao", "Regiao")
                        .WithMany()
                        .HasForeignKey("RegiaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("pizzaria.PizzaPedido", b =>
                {
                    b.HasOne("pizzaria.Tamanho", "Tamanho")
                        .WithMany()
                        .HasForeignKey("TamanhoNome")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tamanho");
                });
#pragma warning restore 612, 618
        }
    }
}
